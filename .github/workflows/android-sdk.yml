name: WalletAndroid-SDK-Publish

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release version (e.g., 2.7.3)'
        required: true
      prerelease:
        description: 'Is this a pre-release?'
        required: true
        default: 'false'

jobs:
  release-android-sdk:
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ github.event.inputs.release_tag }}
      PRERELEASE: ${{ github.event.inputs.prerelease == 'true' }}

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: 🛠️ Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 🧪 Build AAR + Sources + Javadoc
        run: |
          ./gradlew clean \
            :VCL:assembleRelease \
            :VCL:generateSourcesJar \
            :VCL:generateJavadocJar \
            -PprojectVersion=${RELEASE_VERSION} \
            --stacktrace

      - name: ✅ Verify expected artifacts exist
        run: |
          echo "Checking artifacts for version ${RELEASE_VERSION}..."
          test -f VCL/build/outputs/aar/vcl-${RELEASE_VERSION}.aar || (echo "❌ AAR not found" && exit 1)
          test -f VCL/build/libs/vcl-${RELEASE_VERSION}-sources.jar || (echo "❌ Sources JAR missing" && exit 1)
          test -f VCL/build/libs/vcl-${RELEASE_VERSION}-javadoc.jar || (echo "❌ Javadoc JAR missing" && exit 1)

      - name: 🔐 Load GPG keys (as temp files)
        run: |
          echo "${{ secrets.MAVEN_CENTRAL_GPG_PRIVATE_KEY_B64 }}" | base64 --decode > private.gpg
          echo "${{ secrets.MAVEN_CENTRAL_GPG_PUBLIC_KEY_B64 }}" | base64 --decode > public.gpg
        shell: bash

      - name: 🚀 Run JReleaser full-release
        uses: jreleaser/release-action@v2
        with:
          version: 1.18.0
          arguments: full-release --config-file=jreleaser.template.yml -PprojectVersion=${{ env.RELEASE_VERSION }} --strict
        env:
          PRERELEASE: ${{ env.PRERELEASE }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.MAVEN_CENTRAL_SIGNING_PASSWORD }}
          JRELEASER_GPG_SECRET_KEY_FILE: private.gpg
          JRELEASER_GPG_PUBLIC_KEY_FILE: public.gpg
          JRELEASER_TOKEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_TOKEN_USERNAME }}
          JRELEASER_TOKEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN_PASSWORD }}
          JRELEASER_NEXUS_STAGING_PROFILE_ID: ${{ secrets.MAVEN_CENTRAL_STAGING_PROFILE_ID }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🧹 Clean up GPG files
        run: rm -f private.gpg public.gpg
