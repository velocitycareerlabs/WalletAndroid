# File: .github/workflows/android-sdk.yml

name: WalletAndroid-SDK-Publish

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        type: choice
        options: [rc, prod]

permissions:
  contents: write

jobs:
  verify-gpg-keys:
    name: üîç Verify GPG Key Lengths
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'rc' || github.event.inputs.environment == 'prod' }}
    steps:
      - name: üîç Check GPG key length validity
        run: |
          if [ ${#JRELEASER_GPG_PUBLIC_KEY} -lt 1000 ] || [ ${#JRELEASER_GPG_SECRET_KEY} -lt 2000 ]; then
            echo "‚ùå One of the GPG keys is too short. Likely malformed or missing."
            exit 1
          fi
        env:
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.MAVEN_CENTRAL_GPG_PUBLIC_KEY_B64 }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.MAVEN_CENTRAL_GPG_PRIVATE_KEY_B64 }}

  build-and-release:
    needs: verify-gpg-keys
    runs-on: ubuntu-latest
    env:
      PACKAGE_TYPE: aar
      JAVA_VERSION: 17
      ARTIFACT_PATH: VCL/build/outputs
      RELEASE_TAG: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build AAR
        run: RELEASE_TAG=${{ env.RELEASE_TAG }} ./gradlew clean assemble${{ env.RELEASE_TAG }}

      - name: Build sources and javadoc jars
        run: ./gradlew sourcesJar javadocJar

      - name: List artifacts
        run: |
          ls -al ${{ env.ARTIFACT_PATH }}/${{ env.PACKAGE_TYPE }}/
          ls -al VCL/build/libs/

      - name: Validate artifacts
        run: |
          test -s ${{ env.ARTIFACT_PATH }}/${{ env.PACKAGE_TYPE }}/vcl-${{ env.RELEASE_TAG }}.aar || exit 1
          test -s VCL/build/libs/vcl-sources.jar || exit 1
          test -s VCL/build/libs/vcl-javadoc.jar || exit 1

      - name: Prepare JReleaser config
        run: |
          VERSION=$(./gradlew -q printVersion).${{ github.run_number }}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          cp .github/jreleaser.template.yml .github/jreleaser.yml
          sed -i "s|{{RELEASE_VERSION}}|$VERSION|g" .github/jreleaser.yml
          sed -i "s|{{ANDROID_NEXUS_STAGING_PROFILE_ID}}|${{ secrets.ANDROID_NEXUS_STAGING_PROFILE_ID }}|g" .github/jreleaser.yml
          sed -i "s|{{PRERELEASE}}|$([[ '${{ env.RELEASE_TAG }}' == 'rc' ]] && echo true || echo false)|" .github/jreleaser.yml
          sed -i "s|{{RELEASE_TAG}}|${{ env.RELEASE_TAG }}|g" .github/jreleaser.yml

      - name: üîê Decode GPG keys to env for MEMORY mode
        run: |
          echo "JRELEASER_GPG_PUBLIC_KEY=$(echo '${{ secrets.MAVEN_CENTRAL_GPG_PUBLIC_KEY_B64 }}' | base64 --decode | tr -d '\n')" >> $GITHUB_ENV
          echo "JRELEASER_GPG_SECRET_KEY=$(echo '${{ secrets.MAVEN_CENTRAL_GPG_PRIVATE_KEY_B64 }}' | base64 --decode | tr -d '\n')" >> $GITHUB_ENV

      - name: üöÄ Release with JReleaser
        uses: jreleaser/release-action@v2
        with:
          version: 1.18.0
          arguments: full-release -PprojectVersion=${{ env.RELEASE_VERSION }} --basedir . -c .github/jreleaser.yml
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.MAVEN_CENTRAL_SIGNING_PASSWORD }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ env.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ env.JRELEASER_GPG_SECRET_KEY }}
          MAVEN_CENTRAL_TOKEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_TOKEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN_PASSWORD }}

      - name: Upload AAR
        uses: actions/upload-artifact@v4
        with:
          name: vcl-${{ env.RELEASE_TAG }}-${{ github.run_number }}
          path: ${{ env.ARTIFACT_PATH }}/${{ env.PACKAGE_TYPE }}
          if-no-files-found: error
          retention-days: 14

      - name: ‚úÖ Notify success
        if: success()
        run: echo "‚úÖ Android SDK published successfully."

      - name: ‚ùå Notify failure
        if: failure()
        run: echo "‚ùå Android SDK build or release failed."
