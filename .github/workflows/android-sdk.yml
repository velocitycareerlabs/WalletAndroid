name: WalletAndroid-SDK-Publish

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "dev"
        type: choice
        options: [dev, rc, prod]

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  PACKAGE_TYPE: aar
  GRADLE_VERSION: 8.8.2
  JAVA_VERSION: 17
  ARTIFACT_PATH: VCL/build/outputs
  GLOBAL_ENV: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
  JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  JRELEASER_GPG_PASSPHRASE: ${{ secrets.MAVEN_CENTRAL_SIGNING_PASSWORD }}
  JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.MAVEN_CENTRAL_PRIVATE_KEY_B64 }}
  JRELEASER_GPG_SECRET_KEY: ${{ secrets.MAVEN_CENTRAL_PRIVATE_KEY_B64 }}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: üõéÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: ‚òï Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: üè∑Ô∏è Set RELEASE_TAG
        run: echo "RELEASE_TAG=$([[ \"${{ env.GLOBAL_ENV }}\" == \"prod\" ]] && echo release || echo rc)" >> $GITHUB_ENV

      - name: üßπ Clean & Build AAR
        run: ./gradlew clean assemble${{ env.RELEASE_TAG }}

      - name: üìÑ Build sources & javadoc jars
        run: ./gradlew sourcesJar javadocJar

      - name: üìÇ List Built Artifacts
        run: |
          ls -al ${{ env.ARTIFACT_PATH }}/${{ env.PACKAGE_TYPE }}/
          ls -al VCL/build/libs/

      - name: üîê Import GPG Key
        run: |
          echo "${{ secrets.MAVEN_CENTRAL_PRIVATE_KEY_B64 }}" | base64 --decode > gpg.asc
          export GPG_TTY=$(tty)
          gpg --batch --yes --import gpg.asc

      - name: üîé Verify GPG Key
        run: gpg --list-keys

      - name: ‚úÖ Validate artifacts
        run: |
          echo "üì¶ Validating artifacts..."
          test -s $ARTIFACT_PATH/$PACKAGE_TYPE/vcl-${RELEASE_TAG}.aar || (echo "‚ùå AAR invalid" && exit 1)
          test -s VCL/build/libs/vcl-sources.jar || (echo "‚ùå sources.jar invalid" && exit 1)
          test -s VCL/build/libs/vcl-javadoc.jar || (echo "‚ùå javadoc.jar invalid" && exit 1)

      - name: üß© Prepare JReleaser config
        run: |
          VERSION=2.7.3-${{ env.RELEASE_TAG }}.${{ github.run_number }}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          cp .github/jreleaser.template.yml .github/jreleaser.yml
          sed -i "s|{{RELEASE_VERSION}}|$VERSION|g" .github/jreleaser.yml
          sed -i "s|{{ANDROID_NEXUS_STAGING_PROFILE_ID}}|${{ secrets.ANDROID_NEXUS_STAGING_PROFILE_ID }}|g" .github/jreleaser.yml
          sed -i "s|{{PRERELEASE}}|$([[ '${{ env.RELEASE_TAG }}' == 'rc' ]] && echo true || echo false)|" .github/jreleaser.yml

      - name: üîç JReleaser Config Validation (DEV only)
        if: ${{ env.GLOBAL_ENV == 'dev' }}
        uses: jreleaser/release-action@v2
        with:
          version: 1.18.0
          arguments: config --basedir . -c .github/jreleaser.yml

      - name: üß™ JReleaser Dry Run (DEV only)
        if: ${{ env.GLOBAL_ENV == 'dev' }}
        uses: jreleaser/release-action@v2
        with:
          version: 1.18.0
          arguments: full-release --dry-run -PprojectVersion=${{ env.RELEASE_VERSION }} --basedir . -c .github/jreleaser.yml

      - name: üöÄ JReleaser Full Release (RC/PROD)
        if: ${{ env.GLOBAL_ENV == 'rc' || env.GLOBAL_ENV == 'prod' }}
        uses: jreleaser/release-action@v2
        with:
          version: 1.18.0
          arguments: full-release -PprojectVersion=${{ env.RELEASE_VERSION }} --basedir . -c .github/jreleaser.yml
        env:
          MAVEN_CENTRAL_TOKEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_TOKEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN_PASSWORD }}

      - name: üóÉÔ∏è Upload Built AAR Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: vcl-${{ env.RELEASE_TAG }}-${{ github.run_number }}
          path: ${{ env.ARTIFACT_PATH }}/${{ env.PACKAGE_TYPE }}
          if-no-files-found: error
          retention-days: 14

      - name: ‚úÖ Post Success Status
        if: success()
        run: echo "‚úÖ Android SDK Build and Release successful."

      - name: ‚ùå Post Failure Status
        if: failure()
        run: echo "‚ùå Android SDK Build or Tests failed."
