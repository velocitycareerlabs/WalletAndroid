name: WalletAndroid-SDK-Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - rc
          - prod

env:
  PACKAGE_TYPE: "aar"
  GRADLE_VERSION: "8.8.2"
  JAVA_VERSION: "17"
  ARTIFACT_PATH: VCL/build/outputs
  GLOBAL_ENV: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}

jobs:
  test-android-sdk:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || inputs.environment == 'dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Run Unit Tests
        run: ./gradlew test

  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set RELEASE_TAG
        run: |
          if [[ "${{ env.GLOBAL_ENV }}" == "prod" ]]; then
            echo "RELEASE_TAG=Release" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=Rc" >> $GITHUB_ENV
          fi

      - name: Build AAR
        run: ./gradlew assemble${{ env.RELEASE_TAG }}

      - name: Build sources jar
        run: ./gradlew sourcesJar

      - name: Rename AAR to lowercase
        run: |
          UPPER_NAME="VCL-${RELEASE_TAG}.$PACKAGE_TYPE"
          LOWER_NAME="vcl-${RELEASE_TAG,,}.$PACKAGE_TYPE"
          if [ -f "$ARTIFACT_PATH/$PACKAGE_TYPE/$UPPER_NAME" ]; then
            mv "$ARTIFACT_PATH/$PACKAGE_TYPE/$UPPER_NAME" "$ARTIFACT_PATH/$PACKAGE_TYPE/$LOWER_NAME"
          else
            echo "‚ùå File not found: $UPPER_NAME"
            exit 1
          fi

      - name: List Built Artifacts
        run: ls -al ${{ env.ARTIFACT_PATH }}/${{ env.PACKAGE_TYPE }}/

      - name: Determine prerelease flag
        run: |
          if [[ "${{ env.RELEASE_TAG }}" == "Rc" ]]; then
            echo "JRELEASER_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "JRELEASER_PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Import GPG Key
        shell: bash {0}
        run: |
          echo "${{ secrets.MAVEN_CENTRAL_PRIVATE_KEY_GPG_B64 }}" | base64 --decode > gpg.asc
          gpg --no-tty --batch --yes --import gpg.asc
          status=$?
          if [ $status -ne 0 ]; then
            echo "‚ùå GPG key import failed (exit code $status)"
            exit $status
          else
            echo "‚úÖ GPG key successfully imported"
          fi

      - name: Validate artifacts before release
        run: |
          echo "üì¶ Verifying required artifacts..."
          test -f $ARTIFACT_PATH/$PACKAGE_TYPE/vcl-${RELEASE_TAG,,}.aar || (echo "‚ùå Missing AAR" && exit 1)
          test -f VCL/build/libs/vcl-sources.jar || (echo "‚ùå Missing sources.jar" && exit 1)

      - name: Run JReleaser
        if: ${{ env.GLOBAL_ENV == 'rc' || env.GLOBAL_ENV == 'prod' }}
        uses: jreleaser/release-action@v2
        with:
          arguments: full-release -PprojectVersion=vcl-${{ github.run_number }} -Pprerelease=${{ env.JRELEASER_PRERELEASE }} -c VCL/jreleaser.yml
          version: latest
        env:
          MAVEN_CENTRAL_TOKEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_TOKEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN_PASSWORD }}
          MAVEN_CENTRAL_SIGNING_KEY_ID: ${{ secrets.MAVEN_CENTRAL_SIGNING_KEY_ID }}
          MAVEN_CENTRAL_SIGNING_PASSWORD: ${{ secrets.MAVEN_CENTRAL_SIGNING_PASSWORD }}
          MAVEN_CENTRAL_PRIVATE_KEY_GPG_B64: ${{ secrets.MAVEN_CENTRAL_PRIVATE_KEY_GPG_B64 }}

      - name: Upload Built Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: vcl-${{ env.RELEASE_TAG }}
          path: ${{ env.ARTIFACT_PATH }}/${{ env.PACKAGE_TYPE }}
          if-no-files-found: error
          retention-days: 14
