plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

import org.gradle.api.tasks.bundling.Jar

ext {
    publishCode = 163
    baseVersion = "2.7.3"
    artifactId = "vcl"
    publishGroup = "io.velocitycareerlabs"
    namespaceId = publishGroup
}

group = publishGroup

def releaseTag = System.getenv("RELEASE_TAG") ?: "rc"
version = releaseTag == "release" ? baseVersion : "${baseVersion}-${releaseTag}"

android {
    compileSdk 35
    namespace namespaceId

    defaultConfig {
        minSdk 24
        targetSdk 35
        versionCode publishCode
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
            buildConfigField "int", "VERSION_CODE", "${defaultConfig.versionCode}"
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            initWith debug
        }
        rc {
            initWith debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }

    buildFeatures {
        buildConfig true
    }

    libraryVariants.configureEach { variant ->
        variant.outputs.all {
            outputFileName = "vcl-${variant.name}.aar"
        }
    }
}

afterEvaluate {
    def sourcesJar = tasks.register("sourcesJar", Jar) {
        dependsOn 'assemble'
        archiveBaseName.set("vcl")
        archiveVersion.set("")
        archiveClassifier.set("sources")
        destinationDirectory = file("$buildDir/libs")
        doFirst {
            def mainSrcSet = android.sourceSets.main
            from(mainSrcSet.java.srcDirs)
            from(mainSrcSet.kotlin?.srcDirs ?: ["src/main/kotlin"])
        }
    }

    def javadocJar = tasks.register("javadocJar", Jar) {
        dependsOn 'assemble'
        archiveBaseName.set("vcl")
        archiveVersion.set("")
        archiveClassifier.set("javadoc")
        destinationDirectory = file("$buildDir/libs")
        doFirst {
            def dummyDir = file("$buildDir/empty-javadoc")
            dummyDir.mkdirs()
            def dummyJava = new File(dummyDir, "placeholder.java")
            if (!dummyJava.exists()) {
                dummyJava.text = "/** Placeholder to satisfy Maven Central javadoc requirement */"
            }
            from(dummyDir)
        }
    }

    def commonPom = { MavenPublication pub ->
        pub.pom {
            name.set("VCL")
            description.set("Velocity Career Labs Android SDK")
            url.set("https://github.com/velocitycareerlabs/WalletAndroid")
            licenses {
                license {
                    name.set("The Apache License, Version 2.0")
                    url.set("https://www.apache.org/licenses/LICENSE-2.0.txt")
                }
            }
            developers {
                developer {
                    id.set("michaelavoyan")
                    name.set("Michael Avoyan")
                    email.set("michael.avoyan@gmail.com")
                }
            }
            scm {
                connection.set("scm:git:https://github.com/velocitycareerlabs/WalletAndroid.git")
                developerConnection.set("scm:git:ssh://git@github.com:velocitycareerlabs/WalletAndroid.git")
                url.set("https://github.com/velocitycareerlabs/WalletAndroid")
            }
        }
    }

    publishing {
        publications {
            create("library", MavenPublication) {
                groupId = project.group
                artifactId = artifactId
                version = project.version

                def aarFile = file("$buildDir/outputs/aar/vcl-${releaseTag}.aar")
                artifact(aarFile)
                artifact(sourcesJar.get())
                artifact(javadocJar.get())

                commonPom(delegate)
            }
        }

        repositories {
            maven {
                name = "localStagingForJReleaser"
                url = uri("$buildDir/staging-deploy")
            }
        }
    }
}

// Task to expose resolved version for GitHub Actions
tasks.register("printVersion") {
    doLast {
        println project.version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'androidx.core:core-ktx:1.15.0'

    implementation 'com.nimbusds:nimbus-jose-jwt:10.0.2'
    implementation "androidx.security:security-crypto:1.1.0-alpha07"

    // Reflection
//    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13.2'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.6.1'
    testImplementation 'org.robolectric:robolectric:4.13'
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:5.14.2"
    testImplementation "org.mockito:mockito-inline:5.2.0"
    // Required -- JSON framework
    testImplementation 'org.json:json:20240303'
    // json assert
    testImplementation 'org.skyscreamer:jsonassert:1.5.3'

    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}
