def propertiesFilePath = '/Volumes/Keybase/team/velocitycareers/mobile/android/maven/nexus.properties'
def propertiesFile = new File(propertiesFilePath)

if (propertiesFile.exists()) {
    def properties = new Properties()
    try {
        properties.load(new FileInputStream(propertiesFile))
    } catch (IOException e) {
        e.printStackTrace()
    }
} else {
    println "Properties file not found: $propertiesFilePath"
}


// File properties_file = new File('/Volumes/Keybase/team/velocitycareers/mobile/android/maven/nexus.properties')

// if(properties_file.exists())
//     Properties properties = new Properties()
//     properties.load(new FileInputStream(rootProject.file(
//         '/Volumes/Keybase/team/velocitycareers/mobile/android/maven/nexus.properties'
//     )))

// Properties properties = new Properties()
// properties.load(new FileInputStream(rootProject.file(
//     '/Volumes/Keybase/team/velocitycareers/mobile/android/maven/nexus.properties'
// )))

ext {
    signingKeyId = System.getenv("ANDROID_NEXUS_SIGNING_KEY_ID") ?: properties["signingKeyId"]
    signingPassword = System.getenv("ANDROID_NEXUS_SIGNING_PWD") ?: properties["signingPassword"]
    ossrhUsername = System.getenv("ANDROID_NEXUS_OSSRH_USERNAME") ?: properties["ossrhUsername"]
    ossrhPassword = System.getenv("ANDROID_NEXUS_OSSRH_PWD") ?: properties["ossrhPassword"]
    sonatypeStagingProfileId = System.getenv("ANDROID_NEXUS_STAGING_PROFILE_ID") ?: properties["stagingProfileId"]
    signingPrivateKey = System.getenv("ANDROID_NEXUS_PRIVATE_KEY") ?: properties["signingPrivateKey"]
}

nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}